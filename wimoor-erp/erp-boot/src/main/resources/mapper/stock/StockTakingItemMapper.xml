<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wimoor.erp.stock.mapper.StockTakingItemMapper" >
  <resultMap id="BaseResultMap" type="com.wimoor.erp.stock.pojo.entity.StockTakingItem" >
    <result column="id" property="id" jdbcType="CHAR" />
    <result column="stocktakingid" property="stocktakingid" jdbcType="CHAR" />
    <result column="materialid" property="materialid" jdbcType="CHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="warehouseid" property="warehouseid" jdbcType="CHAR" />
     <result column="overamount" property="overamount" jdbcType="INTEGER" />
    <result column="lossamount" property="lossamount" jdbcType="INTEGER" />
  </resultMap>
  	<select id="findLocalInventory" resultType="java.util.Map" parameterType="java.util.Map">
		select 
			uuid_short() id, 
			i.warehouseid warehouseid, 
			i.name warehouse,
			i.name warehousename,
			m.sku,
			m.name name,
			m.id materialid, 
			ifnull(i.inbound,0) inbound,
			ifnull(i.fulfillable,0) fulfillable,
			ifnull(i.outbound,0) outbound,
			m.price,
			ifnull(p.location,p.url) image,
			m.issfg
		from  t_erp_material m
		left join (
			select iv.shopid,iv.warehouseid,max(w.addressid) addressid,iv.materialid,max(w.name) name,
				sum( case when substring_index(iv.status,'_',1)='inbound' then iv.quantity else 0 end ) inbound,
				sum( case when substring_index(iv.status,'_',1)='outbound' then iv.quantity else 0 end ) outbound,
				sum( case when substring_index(iv.status,'_',1)='fulfillable' then iv.quantity else 0 end ) fulfillable
			from t_erp_inventory iv
			left join t_erp_warehouse w on  w.id=iv.warehouseid  
			where iv.shopid=#{param.shopid,jdbcType=CHAR} and w.disabled=0
			<if test="param.warehouseid != null">
			    and iv.warehouseid=#{param.warehouseid,jdbcType=CHAR}
		    </if>
			group by iv.shopid,iv.warehouseid,iv.materialid
		) i on   i.materialid=m.id
			left join t_erp_stocktaking_item stk on stk.materialid=m.id
			<if test="param.warehouseid!=null" >
			and  stk.warehouseid=#{param.warehouseid,jdbcType=CHAR}
			</if>
			<if test="param.warehouseid==null" >
			  and  stk.warehouseid=i.warehouseid
			</if>
			 and stk.stocktakingid=#{param.stocktakingid,jdbcType=CHAR}
		left join t_picture p on p.id=m.image
		where  m.shopid=#{param.shopid,jdbcType=CHAR}  and m.isDelete=false
		<if test="param.skuid != null">
			and m.id=#{param.skuid,jdbcType=CHAR}
		</if>
		 <if test="param.addressid != null">
			    and i.addressid=#{param.addressid,jdbcType=CHAR}
		    </if>
		<if test="param.itemsku!=null">
			and m2.sku=#{param.itemsku,jdbcType=CHAR}
		</if>
		<if test="param.conssku!=null">
			and m3.sku=#{param.conssku,jdbcType=CHAR}
		</if>
		<if test="param.search != null">
			and m.sku like #{param.search,jdbcType=CHAR} 
		</if>
		<if test="param.hasInv=='true'">
		   and i.fulfillable>0
		</if>
		<if test="param.stocktakingid!=null">
		  and stk.id is null
		</if>
		ORDER BY i.name
	</select>
	
    <select id="getItemList" parameterType="java.lang.String" resultType="java.util.Map">
	SELECT  max(item.id) id,m.id materialid,max(m.sku) sku,
	  max(m.color) color, max(m.name) name,max(m.price) price,max(IFNULL(p.location,p.url)) image,
      sum(case when i.`status`='fulfillable' then i.quantity  else 0 END) fulfillable,
		  sum(case when POSITION('outbound' IN i.`status`) then i.quantity  else 0 END) outbound,
		  max(item.id) itemid,max(item.amount) amount,max(item.amount) amount2,
		  max(item.overamount) overamount,max(item.lossamount) lossamount,max(w.name) warehouse,
		  max(item.warehouseid) warehouseid
		 from t_erp_stocktaking_item item 
		 LEFT JOIN t_erp_material m on m.id=item.materialid 
     	 LEFT JOIN t_picture p on m.image=p.id 
     	 left join t_erp_warehouse w on w.id=item.warehouseid
		 LEFT JOIN t_erp_inventory i on i.warehouseid=item.warehouseid and i.materialid=item.materialid 
		 where item.stocktakingid=#{id,jdbcType=CHAR}
		  <if test="warehouseid!=null">
		  and item.warehouseid=#{warehouseid,jdbcType=CHAR} 
		  </if>
		 <if test="search!=null">
			and m.sku like #{search,jdbcType=CHAR}
		</if>
		 group by m.id
  </select>
  <!-- <insert id="insert" parameterType="com.wimoor.erp.pojo.entity.StockTakingItem" >
    insert into t_erp_stocktaking_item (id, stocktakingid, materialid, 
      amount)
    values (#{id,jdbcType=CHAR}, #{stocktakingid,jdbcType=CHAR}, #{materialid,jdbcType=CHAR}, 
      #{amount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wimoor.erp.pojo.entity.StockTakingItem" >
    insert into t_erp_stocktaking_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stocktakingid != null" >
        stocktakingid,
      </if>
      <if test="materialid != null" >
        materialid,
      </if>
      <if test="amount != null" >
        amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="stocktakingid != null" >
        #{stocktakingid,jdbcType=CHAR},
      </if>
      <if test="materialid != null" >
        #{materialid,jdbcType=CHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert> -->
</mapper>