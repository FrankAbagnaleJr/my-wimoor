/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.spapi.model.fulfillmentinbound;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * LabelDownloadURL
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-21T11:58:54.268+08:00")
public class LabelDownloadURL {
  @SerializedName("DownloadURL")
  private String downloadURL = null;

  public LabelDownloadURL downloadURL(String downloadURL) {
    this.downloadURL = downloadURL;
    return this;
  }

   /**
   * URL to download the label for the package. Note: The URL will only be valid for 15 seconds
   * @return downloadURL
  **/
  @ApiModelProperty(value = "URL to download the label for the package. Note: The URL will only be valid for 15 seconds")
  public String getDownloadURL() {
    return downloadURL;
  }

  public void setDownloadURL(String downloadURL) {
    this.downloadURL = downloadURL;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LabelDownloadURL labelDownloadURL = (LabelDownloadURL) o;
    return Objects.equals(this.downloadURL, labelDownloadURL.downloadURL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(downloadURL);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LabelDownloadURL {\n");
    
    sb.append("    downloadURL: ").append(toIndentedString(downloadURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

